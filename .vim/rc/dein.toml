[[plugins]]
repo = 'Shougo/dein.vim'
rtp = ''

[[plugins]]
repo = 'yegappan/mru'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'thinca/vim-splash'
hook_add = '''
  let g:splash#path = $HOME . '/.vim/rc/splash.txt'
'''

[[plugins]]
repo = 'altercation/vim-colors-solarized'
hook_add = '''
  set background=dark
  let g:solarized_termtrans=1
  colorscheme solarized
'''

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
    nmap n <Plug>(anzu-n)
    nmap N <Plug>(anzu-N)
    nmap * <Plug>(anzu-star)
    nmap # <Plug>(anzu-sharp)
    nmap n <Plug>(anzu-n-with-echo)
    nmap N <Plug>(anzu-N-with-echo)
    nmap * <Plug>(anzu-star-with-echo)
    nmap # <Plug>(anzu-sharp-with-echo)
    augroup vim-anzu
      autocmd!
      autocmd CursorHold,CursorHoldI,WinLeave,TabLeave * call anzu#clear_search_status()
    augroup END
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'fugitive', 'filename', 'anzu' ] ]
      \ },
      \ 'component_function': {
      \   'fugitive': 'LightLineFugitive',
      \   'readonly': 'LightLineReadonly',
      \   'modified': 'LightLineModified',
      \   'filename': 'LightLineFilename',
      \   'anzu': 'anzu#search_status'
      \ },
      \ 'separator': { 'left': '⮀', 'right': '⮂' },
      \ 'subseparator': { 'left': '⮁', 'right': '⮃' }
      \ }

  function! LightLineModified()
    if &filetype == "help"
      return ""
    elseif &modified
      return "+"
    elseif &modifiable
      return ""
    else
      return ""
    endif
  endfunction

  function! LightLineReadonly()
    if &filetype == "help"
      return ""
    elseif &readonly
      return "⭤"
    else
      return ""
    endif
  endfunction

  if dein#tap('vim-fugitive')
    function! LightLineFugitive()
      if exists("*fugitive#head")
        let branch = fugitive#head()
        return branch !=# '' ? '⭠ '.branch : ''
      endif
      return ''
    endfunction
  endif

  function! LightLineFilename()
    return ('' != LightLineReadonly() ? LightLineReadonly() . ' ' : '') .
        \ ('' != expand('%:t') ? expand('%:t') : '[No Name]') .
        \ ('' != LightLineModified() ? ' ' . LightLineModified() : '')
  endfunction
'''

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-line'

[[plugins]]
repo = 'kana/vim-textobj-entire'

# Operators
[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# [[plugins]]
# repo = 'nathanaelkane/vim-indent-guides'
# hook_add = '''
#   let g:indent_guides_enable_on_vim_startup=1
#   let g:indent_guides_auto_colors = 0
#   let g:indent_guides_start_level = 2
#   let g:indent_guides_guide_size = 2
#   let g:indent_guides_space_guides=1
#   let g:indent_guides_color_change_percent = 30
#   autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd guibg='#23272A' ctermbg=0
#   autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg='#202224'
#   let g:indent_guides_exclude_filetypes = ['help']
# '''

[[plugins]]
repo = 'vim-jp/autofmt'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'

[[plugins]]
repo = 'othree/html5.vim'

[[plugins]]
repo = 'thinca/vim-ft-diff_fold'

[[plugins]]
repo = 'thinca/vim-ft-help_fold'

[[plugins]]
repo = 'thinca/vim-ft-vim_fold'

[[plugins]]
repo = 'groenewege/vim-less'
on_ft = 'less'

[[plugins]]
repo = 'jiangmiao/simple-javascript-indenter'

[[plugins]]
repo = 'jelera/vim-javascript-syntax'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'elzr/vim-json'

[[plugins]]
repo = 'rcmdnk/vim-markdown'

[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
